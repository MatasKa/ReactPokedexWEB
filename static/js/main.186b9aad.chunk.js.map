{"version":3,"sources":["PokeAPI.png","constants.js","Pokedex.jsx","Pokemon.jsx","About.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","toFirstCharUppercase","name","charAt","toUpperCase","slice","useStyles","makeStyles","theme","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","searchContainer","display","marginTop","marginBottom","borderRadius","searchIcon","alignSelf","searchInput","width","color","about","fontWeight","height","background","border","cursor","fontFamily","fontSize","next","previous","Pokedex","props","classes","history","useState","pokemonData","setPokemonData","filter","setFilter","page","setPage","limit","setLimit","useEffect","axios","get","then","response","results","data","newPokemonData","forEach","pokemon","index","id","sprite","AppBar","position","Toolbar","className","TextField","onChange","e","target","value","label","variant","onClick","push","Grid","container","spacing","Object","keys","map","pokemonId","includes","item","xs","key","Card","style","CardMedia","image","CardContent","Typography","getPokemonCard","CircularProgress","textStyle","Pokemon","match","params","undefined","setPokemon","catch","error","species","weight","types","front_default","sprites","src","alt","basename","process","Link","href","url","typeInfo","type","generatePokemonJSX","Button","About","AboutText","Author","bottom","textAlign","imageStyle","ButtonStyle","require","App","exact","path","render","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.186b9aad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PokeAPI.3fa72200.png\";","export const toFirstCharUppercase = name =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport './Style.css'\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CircularProgress,\r\n  Toolbar,\r\n  AppBar,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport { Refresh } from \"@material-ui/icons\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pokedexContainer: {\r\n    paddingTop: \"20px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n  cardMedia: {\r\n    margin: \"auto\",\r\n  },\r\n  cardContent: {\r\n    margin: \"auto\",\r\n  },\r\n  searchContainer: {\r\n    display: \"flex\",\r\n    paddingLeft: \"20px\",\r\n    paddingRight: \"20px\",\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  searchIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  searchInput: {\r\n    width: \"200px\",\r\n    margin: \"5px\",\r\n    color: \"White\",\r\n  },\r\n  about: {\r\n    fontWeight: \"bold\",\r\n    margin:\"20px\",\r\n    height: \"30px\",\r\n    width: \"130px\",\r\n    background: \"none\",\r\n    display: \"inline-block\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    fontFamily: \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\",\r\n    fontSize: \"20px\",\r\n  },\r\n\r\n  next:{\r\n\r\n  },\r\n\r\n  previous: {\r\n\r\n  }\r\n}));\r\n\r\nconst Pokedex = (props) => {\r\n  const classes = useStyles();\r\n  const { history } = props;\r\n  const [pokemonData, setPokemonData] = useState({});\r\n  const [filter, setFilter] = useState(\"\");\r\nconst [page, setPage] = useState(0)\r\nlet [limit, setLimit] = useState(20)\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .get(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${page * limit}`)\r\n    .then(function (response) {\r\n      const { data } = response;\r\n      const { results } = data;\r\n      const newPokemonData = {};\r\n      results.forEach((pokemon, index) => {\r\n        newPokemonData[index + 1] = {\r\n          id: index + 1 + (page * limit),\r\n          name: pokemon.name,\r\n          sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n            index + 1 + (page * limit)\r\n          }.png`,\r\n        };\r\n      });\r\n      setPokemonData(newPokemonData);\r\n    });\r\n}, [page, limit]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const getPokemonCard = (pokemonId) => {\r\n    const { id, name, sprite } = pokemonData[pokemonId];\r\n    return (\r\n      <Grid item xs={2} key={pokemonId}>\r\n        <Card style={{cursor: \"pointer\"}} onClick={() => history.push(`/${id}`)}>\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={sprite}\r\n            style={{ width: \"130px\", height: \"130px\"}}\r\n          />\r\n          <CardContent className={classes.cardContent}>\r\n            <Typography style={{fontFamily: \"cursive\"}}>{`${id}. ${toFirstCharUppercase(name)}`}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <div className={classes.searchContainer}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n            <TextField\r\n              className={classes.searchInput}\r\n              onChange={handleSearchChange}\r\n              label=\"Pokemon\"\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n          <div> \r\n            <button className={classes.about} onClick={() => history.push(`/about`)} >About</button>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {pokemonData ? (\r\n        <Grid container spacing={2} className={classes.pokedexContainer}>\r\n          {Object.keys(pokemonData).map(\r\n            (pokemonId) =>\r\n              pokemonData[pokemonId].name.includes(filter) &&\r\n              getPokemonCard(pokemonId)\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n      <button className={classes.next} onClick={() => { \r\n        if(page !== 0) \r\n        {\r\n          setPage(page - 1);\r\n          setLimit(limit = 20);\r\n          if(page === 100){\r\n            setPage(page / 2-1);\r\n          }\r\n        }}}>previous page</button>\r\n      <button className={classes.next} onClick={() => {\r\n        if(page !== 50 && page !== 100) \r\n        {\r\n          setPage(page + 1); \r\n          if(page === 49){\r\n            setLimit(limit = 10);\r\n            setPage(page * 2+2);\r\n          }\r\n        } \r\n      }}>next page</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textStyle: {\r\n    fontFamily: \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\",\r\n  }\r\n}));\r\n\r\nconst Pokemon = (props) => {\r\n  const classes = useStyles();\r\n  const { match, history } = props;\r\n  const { params } = match;\r\n  const { pokemonId } = params;\r\n  const [pokemon, setPokemon] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n  }, [pokemonId]);\r\n\r\n  const generatePokemonJSX = (pokemon) => {\r\n    const { name, id, species, height, weight, types, sprites } = pokemon;\r\n    const { front_default } = sprites;\r\n    return (\r\n      <>\r\n        <Typography className={classes.textStyle}  variant=\"h1\">\r\n          {`${id}.`} {toFirstCharUppercase(name)}\r\n        </Typography>\r\n        <img style={{ width: \"128px\", height: \"128px\" }} src={front_default} alt=\"Here should be a pokemon\" />\r\n        <Typography className={classes.textStyle} variant=\"h3\">Pokemon Info</Typography>\r\n        <Typography className={classes.textStyle} >\r\n          {\"Species: \"}\r\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Link href={species.url}>{species.name} </Link>\r\n          </BrowserRouter>\r\n        </Typography>\r\n        <Typography className={classes.textStyle} >Height: {height} </Typography>\r\n        <Typography className={classes.textStyle} >Weight: {weight} </Typography>\r\n        <Typography className={classes.textStyle} variant=\"h6\"> Types:</Typography>\r\n        {types.map((typeInfo) => {\r\n          const { type } = typeInfo;\r\n          const { name } = type;\r\n          return <Typography className={classes.textStyle} key={name}> {`${name}`}</Typography>;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {pokemon === undefined && <CircularProgress />}\r\n      {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n      {pokemon === false && <Typography> Pokemon not found</Typography>}\r\n\r\n      {pokemon !== undefined && (\r\n        <Button variant=\"contained\" onClick={() => history.push(\"/\")}>\r\n          back to pokedex\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React, {} from \"react\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  About: {\r\n    paddingTop: \"20px\",\r\n    margin: \"auto\",\r\n    fontFamily: \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\",\r\n  },\r\n  AboutText: {\r\n    marginTop :\"150px\",\r\n    margin: \"auto\",\r\n    width: \"75%\",\r\n    fontFamily: \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\",\r\n    fontWeight: \"normal\",\r\n  },\r\n  Author: {\r\n    margin :\"auto\",\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: \"25px\",\r\n    textAlign: \"center\",\r\n  },\r\n  imageStyle: {\r\n    margin: \"auto\",\r\n    width: \"250px\",\r\n    height: \"100px\",\r\n    display: \"block\",\r\n  },\r\n  ButtonStyle: {\r\n    marginTop: \"30px\",\r\n    height: \"50px\",\r\n    width: \"200px\",\r\n  }\r\n}));\r\n\r\nconst About = (props) => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n\r\n  const generatePage = () => {\r\n    return (\r\n      <>\r\n        <Typography className={classes.About} variant=\"h1\">\r\n          About\r\n        </Typography>\r\n        <Typography className={classes.AboutText} variant=\"h4\">\r\n        The purpose of the Pokedex is to provide information regarding the various species of Pokémon.\r\n        You can also use the search bar to find them by name.\r\n        </Typography>\r\n        <Button className={classes.ButtonStyle} variant=\"contained\" onClick={() => history.push(\"/\")}>\r\n        back to pokedex\r\n        </Button>\r\n        <Typography className={classes.AboutText} variant=\"h4\">\r\n        Pokémon information taken from\r\n        </Typography>\r\n        <a href=\"https://pokeapi.co\" target=\"_blank\"><img className={classes.imageStyle} src={require(\"./PokeAPI.png\")} alt=\"PokeAPI\" /></a>\r\n        <Typography className={classes.Author} variant=\"h6\">\r\n        This page was created as a WEB2Y 2nd assingment by Matas Kairys and Nerijus Savickas, two software engineer students at VIA University College.\r\n        </Typography>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {generatePage()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;","import React from \"react\";\nimport Pokedex from \"./Pokedex\";\nimport Pokemon from \"./Pokemon\";\nimport About from \"./About\";\nimport { Route, Switch } from \"react-router-dom\";\nlet page = 0;\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" render={(props) => <Pokedex {...props} />} />\n    <Route exact path=\"/about\" render={(props) => <About {...props} />} />\n    <Route\n      exact\n      path=\"/:pokemonId\"\n      render={(props) => <Pokemon {...props} />}\n    ></Route>\n  </Switch>\n);\n\nfunction nextPage() {\n  page++;\n}\nfunction prevPage() {\n  page--;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}